name: Deploy on request (comment 'deploy dev')
run-name: ${{ github.head_ref }} (${{ github.actor }}) ðŸš€

concurrency:
  # group: rerun_concurrency_${{ github.event.pull_request.number }}
  group: spelling-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

on:
  pull_request:
    types: [opened, synchronize]
  issue_comment:
    types: [created]

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - name: Set deploy status in progress
        uses: LouisBrunner/checks-action@v1.6.1
        if: always()
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          name: Set check status in progress
          status: in_progress

      - name: Prepare environment
        run: echo "DEPLOY=false"
    
      - uses: actions/checkout@v2
      - name: Check if deployment is requested
        if: github.event_name == 'issue_comment' && github.event.issue
        env:
          COMMENT_ISSUE_NUMBER: ${{ github.event.issue.number }}
        run: echo "DEPLOY=${{ github.event_name == 'issue_comment' && contains(github.event.comment.body, 'deploy dev') && contains(github.event.issue.number, env.COMMENT_ISSUE_NUMBER) }}" >> $GITHUB_ENV
      
      - name: Check if pull request
        if: github.event_name == 'pull_request'
        run: echo "RUN_NAME=${{ github.ref }}" >> $GITHUB_ENV

      - name: Run deployment
        id: deploy
        if: env.DEPLOY == 'true'
        run: echo "Running deployment of dev version"
        env:
          RUN_ID: ${{ github.run_id }}

      - name: Set deploy status
        uses: LouisBrunner/checks-action@v1.6.1
        if: env.DEPLOY == 'true'
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          name: Set check status
          conclusion: ${{ job.status }}
          output: |
            {"summary":"${{ steps.deploy.outputs.summary }}"}
      
      - name: Set deploy status
        uses: LouisBrunner/checks-action@v1.6.1
        if: env.DEPLOY == 'false'
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          name: Set check status
          conclusion: neutral
      
      - name: Print head ref
        if: github.event_name == 'pull_request'
        run: echo "HEAD_REF=${{ github.head_ref }}" >> $GITHUB_ENV
      
      - name: Print run ID
        if: always()
        run: echo "RUN_ID=${{ github.run_id }}"
      
      - name: Print environment variables
        if: always()
        run: |
          echo "RERUN=$RERUN"
          echo "RUN_NAME=$RUN_NAME"
